<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>React on Dustan Kasten</title><link>http://iamdustan.com/tags/react/</link><description>Recent content in React on Dustan Kasten</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 19 Feb 2016 09:00:00 -0600</lastBuildDate><atom:link href="http://iamdustan.com/tags/react/index.xml" rel="self" type="application/rss+xml"/><item><title>React Devtools-Renderer Integration</title><link>http://iamdustan.com/2016/02/19/react-devtools-renderer-integration/</link><pubDate>Fri, 19 Feb 2016 09:00:00 -0600</pubDate><guid>http://iamdustan.com/2016/02/19/react-devtools-renderer-integration/</guid><description>Integrating React Hardware with the React DevTools was a goal from the first day of the project. As mentioned in my previous article on creating a renderer, I consider interoperability with the existing ecosystem to be of utmost importance.
This mission was accomplished this past weekend with some helpful guidance from @matthewwithanm. This article will begin with a few incorrect assumptions I had about how React, React Native and the DevTools interacted and end with a couple guidelines to writing your own renderer that can interoperate with the React DevTools.</description></item><item><title>An Experiment with React, My Voice, and Hardware.</title><link>http://iamdustan.com/2016/02/14/an-experiment-with-react-my-voice-and-hardware./</link><pubDate>Sun, 14 Feb 2016 09:00:00 -0600</pubDate><guid>http://iamdustan.com/2016/02/14/an-experiment-with-react-my-voice-and-hardware./</guid><description>I’ve been playing with creating a React renderer for hardware off and on over the past year. If you follow me on Twitter you may have seen that a milestone was reached two days ago when React Hardware and the React Devtools became friends.
I’ve been looking for a reason to play with the SpeechRecognition API. Chrome implemented the API a year or so ago and Firefox has support coming quickly.</description></item><item><title>React Custom Renderers</title><link>http://iamdustan.com/2016/01/18/react-custom-renderers/</link><pubDate>Mon, 18 Jan 2016 09:00:00 -0600</pubDate><guid>http://iamdustan.com/2016/01/18/react-custom-renderers/</guid><description>You’re considering building a custom renderer for React and are wondering where to start and what to do? Welcome (to the land of dragons)! Just kidding, it’s not that bad—just undocumented and not officially supported. ¯\_(ツ)_/¯
This article is intended to be a high level view of the developer experience a renderer should aim to provide based on my experience with React, writing a renderer, and exploring other custom renderers. Note that this is not a guide on how to write a renderer.</description></item></channel></rss>